from uuid import uuid4

from sqlalchemy import UUID, ForeignKey, Uuid, create_engine
from sqlalchemy.orm import (
    DeclarativeBase,
    Mapped,
    declared_attr,
    mapped_column,
    relationship,
)

from blogs.settings import DB_URL


class Base(DeclarativeBase):
    id: Mapped[UUID] = mapped_column(Uuid, primary_key=True, default=uuid4)

    @declared_attr
    @classmethod
    def __tablename__(cls):
        return cls.__name__.lower()


class Post(Base):
    title: Mapped[str]
    text: Mapped[str]
    user_id: Mapped[UUID] = mapped_column(ForeignKey('user.id'))

    user: Mapped['User'] = relationship(back_populates='posts')


class Subs(Base):
    follower_id: Mapped[UUID] = mapped_column(ForeignKey('user.id'))
    followed_id: Mapped[UUID] = mapped_column(ForeignKey('user.id'))


class User(Base):
    name: Mapped[str]
    email: Mapped[str] = mapped_column(unique=True)
    password: Mapped[str]

    posts: Mapped[list[Post]] = relationship(back_populates='user')
    followers: Mapped[list['User']] = relationship(
        Subs,
        back_populates='following',
        foreign_keys='Subs.follower_id',

    )
    following: Mapped[list['User']] = relationship(
        Subs,
        back_populates='followers',
        foreign_keys='Subs.followed_id',

    )

    def __repr__(self):
        return f'User(name={self.name}, email={self.email})'


if __name__ == '__main__':
    print('creating db')
    engine = create_engine(DB_URL)
    Base.metadata.create_all(engine)
