from uuid import uuid4

from sqlalchemy import Column, ForeignKey, String, Table, create_engine
from sqlalchemy.orm import declarative_base, relationship

from blogs.settings import DB_URL

Base = declarative_base()

subs_table = Table(
    "subs",
    Base.metadata,
    Column("follower_id", String, ForeignKey("users.id")),
    Column("followed_id", String, ForeignKey("users.id")),
)


class User(Base):
    __tablename__ = "users"

    id = Column(String, primary_key=True, default=str(uuid4()))
    name = Column(String)
    email = Column(String, unique=True)
    password = Column(String)

    posts = relationship("Post", back_populates="user")
    followers = relationship(
        "User",
        secondary=subs_table,
        primaryjoin=id == subs_table.c.followed_id,
        secondaryjoin=id == subs_table.c.follower_id,
        backref="following",
    )

    def __repr__(self):
        return f'User(name={self.name}, email={self.email})'


class Post(Base):
    __tablename__ = "posts"

    id = Column(String, primary_key=True, default=str(uuid4()))
    title = Column(String)
    text = Column(String)
    user_id = Column(String, ForeignKey("users.id"))

    user = relationship("User", back_populates="posts")


if __name__ == "__main__":
    print("creating db")
    engine = create_engine(DB_URL)
    Base.metadata.create_all(engine)
